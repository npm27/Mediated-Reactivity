setwd("C:/Users/nickm/OneDrive/Documents/GitHub/Mediated-Reactivity/4 Analyses/EX 2 RECOG REP")
####Libraries####
library(reshape)
library(ez)
library(psychReport)
####set up####
##libraries
library(reshape)
library(ez)
library(psychReport)
##read in data
dat1 = read.csv("Cross Experiment/orig")
##read in data
dat1 = read.csv("Cross Experiment/orig.csv")
dat2 = read.csv("Cross Experiment/rep.csv")
dat1$Experiment = rep("original")
dat2$Experiment = rep("Replication")
combined = rbind(dat1, dat2)
#turn off scientific notation
options(scipen = 999)
####Run the ANOVA!####
out1 = ezANOVA(presented,
wid = Username,
dv = Scored,
between = .(encoding, Experiment),
within = Direction,
type = 3,
detailed = T) #Sig effect of encoding, sig effect of direction, no interaction
####Run the ANOVA!####
out1 = ezANOVA(combined,
wid = Username,
dv = Scored,
between = .(encoding, Experiment),
within = Direction,
type = 3,
detailed = T) #Sig effect of encoding, sig effect of direction, no interaction
out1
out1$ANOVA$MSE = out1$ANOVA$SSd/out1$ANOVA$DFd
out1$ANOVA$MSE
aovEffectSize(out1, effectSize = "pes")
aovEffectSize(out1, effectSize = "pes")
####Set Up####
dat = read.csv("Recog/recog.csv")
##fix np coding
np = subset(dat,
dat$control == "Control")
np$Scored = (np$Scored - 1) * -1
pr = subset(dat,
dat$control != "Control")
dat = rbind(np, pr)
##load libraries
library(ez)
library(reshape)
library(psychReport)
#turn off scientific notation
options(scipen = 999)
####Explore the data####
##get n
length(unique(dat$Username)) #129 participants
tapply(dat$Scored, dat$Direction, mean) ##okay, mediated and F have higher mean recall vs u.
tapply(dat$Scored, list(dat$encoding, dat$Direction), mean)
####Clean the data####
#remove anyone w/ high recognition of nps
jol = subset(dat,
dat$encoding == "JOL")
jol.long = cast(jol, Username ~ Direction, mean)
read = subset(dat,
dat$encoding == "Read")
read = na.omit(read)
read.long = cast(read, Username ~ Direction, mean)
##remove any one with high recog > 90% in unrelated AND one other category (or Extremely low recog < 10%)
dat = subset(dat,
dat$Username != "5ee244d2d241782e69ec45ca" &
dat$Username != "63d40e90072d08076c329c11") #JOL
dat = subset(dat,
dat$Username != "596e1edd39e9d00001b7bb98" & dat$Username != "63d68acca98cdd2bf385cfad" &
dat$Username != "6012ed349807110d8eb941a6" & dat$Username != "63f7e1bb3866d96e37ecfd1c")
####ANOVA####
##Let's just look at correct hits
presented = subset(dat,
dat$control == "Presented")
#write to csv for cross experimental
write.csv(presented, file = "rep.csv", row.names = F)
#run the anova!
out1 = ezANOVA(presented,
wid = Username,
dv = Scored,
between = encoding,
within = Direction,
type = 3,
detailed = T) #Sig effect of encoding, sig effect of direction, no interaction
out1
out1$ANOVA$MSE = out1$ANOVA$SSd/out1$ANOVA$DFd
out1$ANOVA$MSE
aovEffectSize(out1, effectSize = "pes")
##Break down effects/interactions
tapply(presented$Scored, presented$Direction, mean) #main effect of direction
tapply(presented$Scored, presented$encoding, mean) #main effect of encoding
tapply(presented$Scored, list(presented$encoding, presented$Direction), mean)
###post-hocs
##Direction
direction.ph = cast(presented, Username ~ Direction, mean)
#f vs m
temp = t.test(direction.ph$F, direction.ph$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
pbic1 = direction.ph[ , c(1, 2)]
pbic2 = direction.ph[ , c(1, 3)]
pbic1$direction = rep("F")
pbic2$direction = rep("M")
colnames(pbic1)[2] = "score"
colnames(pbic2)[2] = "score"
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
dv = score,
between = direction,
wid = Username,
detailed = T,
type = 3)
#f vs u
temp = t.test(direction.ph$F, direction.ph$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
mean(direction.ph$F); mean(direction.ph$U)
sd(direction.ph$F); sd(direction.ph$U)
#u vs m
temp = t.test(direction.ph$M, direction.ph$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
mean(direction.ph$M); mean(direction.ph$U)
sd(direction.ph$M); sd(direction.ph$U)
##Interaction
jol2 = subset(presented, presented$encoding == "JOL")
jol3 = cast(jol2, Username ~ Direction, mean)
read2 = subset(presented, presented$encoding == "Read")
read3 = cast(read2, Username ~ Direction, mean)
#F
temp = t.test(jol3$F, read3$F, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#M
temp = t.test(jol3$M, read3$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#U
temp = t.test(jol3$U, read3$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
##get ns
length(unique(jol3$Username)) #61
length(unique(read3$Username)) #62
##get sds for d
(apply(jol3, 2, sd) / sqrt(61)) * 1.96
(apply(read3, 2, sd) / sqrt(62)) * 1.96
##compare false alarms
FA = subset(dat,
dat$Direction == "not presented")
FA2 = cast(FA, Username ~ encoding, mean)
apply(FA2, 2, mean, na.rm = T)
#t-test
temp = t.test(FA2$JOL, FA2$Read, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#get sds for d
(apply(FA2, 2, sd, na.rm = T) / sqrt(62)) * 1.96
####Set Up####
dat = read.csv("Recog/recog.csv")
##fix np coding
np = subset(dat,
dat$control == "Control")
np$Scored = (np$Scored - 1) * -1
pr = subset(dat,
dat$control != "Control")
dat = rbind(np, pr)
##load libraries
library(ez)
library(reshape)
library(psychReport)
#turn off scientific notation
options(scipen = 999)
####Explore the data####
##get n
length(unique(dat$Username)) #129 participants
tapply(dat$Scored, dat$Direction, mean) ##okay, mediated and F have higher mean recall vs u.
tapply(dat$Scored, list(dat$encoding, dat$Direction), mean)
####Clean the data####
#remove anyone w/ high recognition of nps
jol = subset(dat,
dat$encoding == "JOL")
jol.long = cast(jol, Username ~ Direction, mean)
read = subset(dat,
dat$encoding == "Read")
read = na.omit(read)
read.long = cast(read, Username ~ Direction, mean)
##remove any one with high recog > 90% in unrelated AND one other category (or Extremely low recog < 10%)
dat = subset(dat,
dat$Username != "5ee244d2d241782e69ec45ca" &
dat$Username != "63d40e90072d08076c329c11") #JOL
dat = subset(dat,
dat$Username != "596e1edd39e9d00001b7bb98" & dat$Username != "63d68acca98cdd2bf385cfad" &
dat$Username != "6012ed349807110d8eb941a6" & dat$Username != "63f7e1bb3866d96e37ecfd1c")
####ANOVA####
##Let's just look at correct hits
presented = subset(dat,
dat$control == "Presented")
#write to csv for cross experimental
write.csv(presented, file = "rep.csv", row.names = F)
#run the anova!
out1 = ezANOVA(presented,
wid = Username,
dv = Scored,
between = encoding,
within = Direction,
type = 3,
detailed = T) #Sig effect of encoding, sig effect of direction, no interaction
out1
out1$ANOVA$MSE = out1$ANOVA$SSd/out1$ANOVA$DFd
out1$ANOVA$MSE
aovEffectSize(out1, effectSize = "pes")
##Break down effects/interactions
tapply(presented$Scored, presented$Direction, mean) #main effect of direction
tapply(presented$Scored, presented$encoding, mean) #main effect of encoding
tapply(presented$Scored, list(presented$encoding, presented$Direction), mean)
###post-hocs
##Direction
direction.ph = cast(presented, Username ~ Direction, mean)
#f vs m
temp = t.test(direction.ph$F, direction.ph$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#f vs m
temp = t.test(direction.ph$F, direction.ph$M, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#f vs u
temp = t.test(direction.ph$F, direction.ph$U, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#f vs u
temp = t.test(direction.ph$F, direction.ph$U, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#u vs m
temp = t.test(direction.ph$M, direction.ph$U, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#f vs u
temp = t.test(direction.ph$F, direction.ph$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
#f vs m
temp = t.test(direction.ph$F, direction.ph$M, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#f vs m
temp = t.test(direction.ph$F, direction.ph$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #non-sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
pbic1 = direction.ph[ , c(1, 2)]
pbic2 = direction.ph[ , c(1, 3)]
pbic1$direction = rep("F")
pbic2$direction = rep("M")
colnames(pbic1)[2] = "score"
colnames(pbic2)[2] = "score"
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
dv = score,
between = direction,
wid = Username,
detailed = T,
type = 3)
#F
temp = t.test(jol3$F, read3$F, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
tapply(presented$Scored, list(presented$encoding, presented$Direction), mean)
#F
temp = t.test(jol3$F, read3$F, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
#F
temp = t.test(jol3$F, read3$F, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
#F
temp = t.test(jol3$F, read3$F, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
tapply(presented$Scored, list(presented$encoding, presented$Direction), mean)
#F
temp = t.test(jol3$F, read3$F, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
#F
temp = t.test(jol3$F, read3$F, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#M
temp = t.test(jol3$M, read3$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
#M
temp = t.test(jol3$M, read3$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#U
temp = t.test(jol3$U, read3$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
#U
temp = t.test(jol3$U, read3$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
mean(JOL3$F); mean(read3$U)
sd(JOL3$F); sd(read3$U)
mean(jol3$F); mean(read3$U)
sd(jol3$F); sd(read3$U)
mean(jol3$F); mean(read3$F)
sd(jol3$F); sd(read3$F)
mean(jol3$M); mean(read3$M)
sd(jol3$M); sd(read3$M)
mean(jol3$U); mean(read3$U)
sd(jol3$U); sd(read3$U)
#t-test
temp = t.test(FA2$JOL, FA2$Read, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
apply(FA2, 2, mean, na.rm = T)
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
(FA2, 2, sd, na.rm = T)
(apply(FA2, 2, sd, na.rm = T)
apply(FA2, 2, sd, na.rm = T)
